name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [16, 18, 20]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: darwin
          - os: windows-latest
            platform: win32

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.8.1
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: 3.1.61
        actions-cache-folder: 'emsdk-cache'

    - name: Verify Emscripten
      run: |
        emcc -v
        which emcc
        which em++

    - name: Install dependencies
      run: pnpm install

    - name: Build WebAssembly module (Debug)
      run: pnpm run build:wasm:debug

    - name: Build WebAssembly module (Release)
      run: pnpm run build:wasm:release

    - name: Build JavaScript wrapper
      run: pnpm run build:js

    - name: Run unit tests
      run: pnpm test
      
    - name: Run E2E tests
      if: matrix.os == 'ubuntu-latest' # E2E tests only on Linux for now
      run: pnpm run test:e2e

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jwwlib-wasm-${{ matrix.platform }}-node${{ matrix.node-version }}
        path: |
          dist/
          wasm/
        retention-days: 7

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.platform }}-node${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
        retention-days: 7

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.8.1

    - name: Install dependencies
      run: pnpm install

    - name: Run linter
      run: pnpm run lint

    - name: Check formatting
      run: pnpm run format

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.8.1

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Upload security results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-audit
        path: npm-audit.json
        retention-days: 30